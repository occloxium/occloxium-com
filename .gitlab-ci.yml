stages:
  - build
  - bootup-staging
  - deploy-staging
  - after-staging
  - deploy-prod

.kubectl:
  image:
    name: registry.git.rwth-aachen.de/zoomoid/docker-kubectl:latest
    entrypoint: ['/docker-entrypoint.sh']
  before_script:
    - echo $kube_config | base64 -d > /root/runner
    - export KUBECONFIG="$KUBECONFIG:/root/runner"
    - kubectl config view
    - kubectl config use-context runner@kubernetes
  tags:
    - kubernetes

variables:
  NAMESPACE: "-n web"
  STAGING: 'staging-bartolomey-me'
  HOSTS: '["staging.bartolomey.me","staging.occloxium.com"]'
  PRODUCTION: 'bartolomey-me'

build-staging:
  except:
    - master
  image: docker:latest
  stage: build
  script: 
    - echo "$CI_JOB_TOKEN" | docker login registry.git.rwth-aachen.de --username gitlab-ci-token --password-stdin 
    - docker build -t $CI_REGISTRY_IMAGE/nightly:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE/nightly:$CI_COMMIT_SHORT_SHA
  tags: 
    - kubernetes

build-prod:
  image: docker:latest
  stage: build
  script: 
    - echo "$CI_JOB_TOKEN" | docker login registry.git.rwth-aachen.de --username gitlab-ci-token --password-stdin 
    - docker build -t $CI_REGISTRY_IMAGE/stable:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE/stable:$CI_COMMIT_SHORT_SHA
  tags: 
    - kubernetes

create-patches:
  stage: build
  extends: .kubectl
  script:
    - python3 /create-patches.sh --service $STAGING --hosts $HOSTS
    - cp /**.patch.json ./
  artifacts:
    paths:
      - ./remove-staging.patch.json
      - ./add-staging.patch.json

bootup-staging:
  except:
    - master
  stage: bootup-staging
  extends: .kubectl
  script:
    - kubectl patch ingress/$STAGING --patch "$(cat ./add-staging.patch.json)"

deploy-staging:
  except:
    - master
  stage: deploy-staging
  extends: .kubectl
  environment:
    name: staging
    url: https://staging.bartolomey.me
  script:
    - kubectl set image deployments/$STAGING $STAGING=$CI_REGISTRY_IMAGE/nightly:$CI_COMMIT_SHORT_SHA --record

takedown-staging:
  except:
    - master
  stage: after-staging
  when: manual
  extends: .kubectl
  environment:
    name: staging
    url: https://staging.bartolomey.me
  script:
    - kubectl patch ingress/$SERVICE --patch "$(cat ./remove-staging.patch.json)"

auto-takedown-staging:
  only:
    - master
  stage: deploy-prod
  extends: .kubectl
  environment:
    name: staging
    url: https://staging.bartolomey.me
  script:
    - kubectl get deployments
    - kubectl patch ingress/$SERVICE --patch "$(cat ./remove-staging.patch.json)"

deploy-production:
  only:
    - master
  stage: deploy-prod
  extends: .kubectl
  script: 
    - kubectl set image deployments/$PRODUCTION $PRODUCTION=$CI_REGISTRY_IMAGE/stable:$CI_COMMIT_SHORT_SHA --record
  environment:
    name: production
    url: https://bartolomey.me
